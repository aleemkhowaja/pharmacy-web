input ProductInput{
    name: String,
    barCode: String,
    barCode2: String,
    category: CategoryInput,
    therapeuticClass: TherapeuticClassInput,
    pharmaceuticalForm: PharmaceuticalFormInput,
    dci: DCIInput,
    laboratory: String,
    range1: RangeInput,
    subRange: String,
    productTable: String,
    requiresPrescription: String,
    productMarket: String,
    pph: String,
    ppv: String,
    vatOnPurchase: String,
    vatOnSale: String,
    isRefundable: String,
    basisOfReimbursement: String,
    presentation: String,
    excipients: String,
    adultDosage: String,
    dosageForChildren: String,
    indications: String,
    contraindicationDriving: String,
    breastFeedingContraindication: String,
    pregnancyContraindication: String,
    productLabReference: String,
    conditioning: String,
    monoGraph: String,
    description: String
}
type Product{
    id: ID!,
    name: String,
    barCode: String,
    barCode2: String,
    category: Category,
    therapeuticClass: TherapeuticClass,
    pharmaceuticalForm: PharmaceuticalForm,
    dci: DCI,
    laboratory: String,
    range1: Range,
    subRange: String,
    productTable: String,
    requiresPrescription: String,
    productMarket: String,
    pph: String,
    ppv: String,
    vatOnPurchase: String,
    vatOnSale: String,
    isRefundable: String,
    basisOfReimbursement: String,
    presentation: String,
    excipients: String,
    adultDosage: String,
    dosageForChildren: String,
    indications: String,
    contraindicationDriving: String,
    breastFeedingContraindication: String,
    pregnancyContraindication: String,
    productLabReference: String,
    conditioning: String,
    monoGraph: String,
    description: String
    count : Int,
    status : String,
    createdBy : User,
    createdDate : DateTime,
    modifiedBy : User,
    modifiedDate : DateTime

}
extend type Query{
    getAllProducts(pageNumber: Int!, pageSize : Int!, sortOrder: String!, sortBy: String!, filter: ProductInput):[Product]
    ProductById(id: ID!):Product
}
extend type Mutation{
    createProduct(input: ProductInput): Product
    updateProduct(id: ID!, input: ProductInput): Product
    deleteProduct(id: ID!): Product
}
